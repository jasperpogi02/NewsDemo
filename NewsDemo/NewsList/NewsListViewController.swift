//
//  NewsListViewController.swift
//  NewsDemo
//
//  Created by Jasper Alain Goce on 26/09/2019.
//  Copyright (c) 2019 blessed. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit
import CoreLocation

protocol NewsListDisplayLogic: class
{
    func displayNews(viewModel: NewsList.ViewModel)
    func displayError(errMsg: String)
}

class NewsListViewController: UIViewController, NewsListDisplayLogic, NewsListViewProtocol
{
    var rowHeight: CGFloat = 0.0
    var locationManager = CLLocationManager()
    var currentLocation: CLLocation!
    var interactor: NewsListBusinessLogic?
    var router: (NSObjectProtocol & NewsListRoutingLogic & NewsListDataPassing)?
    
    lazy var myView: NewsListView = {
        let view = NewsListView(frame: CGRect(x: self.view.frame.minX, y: self.view.frame.minY, width: self.view.frame.width, height: self.view.frame.height))
        view.delegate = self
        view.backgroundColor = .white
        view.translatesAutoresizingMaskIntoConstraints = false
        return view
    }()
    
    // MARK: Setup
    
    private func setup()
    {
        let viewController = self
        let interactor = NewsListInteractor()
        let presenter = NewsListPresenter()
        let router = NewsListRouter()
        viewController.interactor = interactor
        viewController.router = router
        interactor.presenter = presenter
        presenter.viewController = viewController
        router.viewController = viewController
        router.dataStore = interactor
    }
    
    private func setupView()
    {
        view.addSubview(myView)
    }
    
    // MARK: View lifecycle
    
    override func viewDidLoad()
    {
        super.viewDidLoad()
        setup()
        setupView()
        locationManager.delegate = self
        locationManager.requestWhenInUseAuthorization()
        if CLLocationManager.locationServicesEnabled() && CLLocationManager.authorizationStatus() != .authorizedWhenInUse && CLLocationManager.authorizationStatus() != .notDetermined {
            showAppSettingLocation()
        }
    }
    
    override func viewDidLayoutSubviews() {
        updateSubview()
    }
    
    // MARK: Event Handling
    func getNews() {
        guard let uid = UIDevice.current.identifierForVendor?.uuidString,
            let appVersion = Bundle.main.infoDictionary?["CFBundleShortVersionString"] as? String,
            let bundleID = Bundle.main.bundleIdentifier else { return }
        guard currentLocation != nil else { return }
        let requestParam = NewsList.Request.NewsRequest(input: NewsList.Request.Input(annotations: NewsList.Request.Annotations(topic: "Donald Trump"), intent: "news_search"), location: NewsList.Request.Location(latitude: currentLocation.coordinate.latitude, timezone: "Asia/Singapore", longitude: currentLocation.coordinate.longitude), device: NewsList.Request.Device(id: uid, model: UIDevice.current.model), debug: false, agentInfo: NewsList.Request.AgentInfo(param: "omega"), app: NewsList.Request.App(version: appVersion, id: bundleID, platform: "ios"), user: NewsList.Request.User(carNumber: "", accessTokens: [NewsList.Request.AccessToken(provider: "iamplus", value: "8d9df09053879af491316c8b7169c209f5b1300017f091d9d8188bb55c2f1efa", email: nil), NewsList.Request.AccessToken(provider: "carrefour", value: "b34a88d0-62d2-48b4-90c9-a4d1b7605647", email: "duladissa@gmail.com")], uuid: uid, name: "Jasper", phoneNumber: "99999999", restaurantNumber: "", id: "nrtteja@gmail.com"))
        interactor?.getNews(requestParam: requestParam)
    }
    
    // MARK: Display Handling
    func updateSubview() {
        DispatchQueue.main.async {
            self.myView.scrollView.contentSize = CGSize(width: self.view.frame.width, height: self.rowHeight)
        }
    }
    
    func displayNews(viewModel: NewsList.ViewModel)
    {
        self.myView.viewModel.dataSource = viewModel.dataSource
        reloadNews()
    }
    
    func displayError(errMsg: String) {
        debugPrint(errMsg)
    }
    
    func reloadNews() {
        DispatchQueue.main.async {
            for news in self.myView.viewModel.dataSource {
                let newsView = NewsView(frame: CGRect(x: 0, y: self.rowHeight, width: self.view.frame.width + 1, height: 150))
                newsView.viewDetails = news
                self.myView.scrollView.addSubview(newsView)
                self.rowHeight = (self.rowHeight + 149.0)
            }
            self.updateSubview()
        }
        
    }
    
    func showAppSettingLocation() {
        if let url = URL(string: UIApplication.openSettingsURLString) {
            UIApplication.shared.open(url, options: [:], completionHandler: nil)
        }
    }
}

extension NewsListViewController: CLLocationManagerDelegate {
    func locationManager(_ manager: CLLocationManager, didChangeAuthorization status: CLAuthorizationStatus) {
        if (CLLocationManager.authorizationStatus() == CLAuthorizationStatus.authorizedWhenInUse ||
            CLLocationManager.authorizationStatus() == CLAuthorizationStatus.authorizedAlways){
            guard let currentLocation = locationManager.location else {
                return
            }
            self.currentLocation = currentLocation
            getNews()
        }
    }
    
}
