//
//  NewsListModels.swift
//  NewsDemo
//
//  Created by Jasper Alain Goce on 26/09/2019.
//  Copyright (c) 2019 blessed. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import Foundation
import UIKit

struct NewsList
{
    // MARK: Object model for API requests
    
    struct Request
    {
        // MARK: - NewsRequest
        struct NewsRequest: Codable {
            let input: Input
            let location: Location
            let device: Device
            let debug: Bool
            let agentInfo: AgentInfo
            let app: App
            let user: User
            
            enum CodingKeys: String, CodingKey {
                case input, location, device, debug
                case agentInfo = "agent_info"
                case app, user
            }
        }
        
        // MARK: - AgentInfo
        struct AgentInfo: Codable {
            let param: String
        }
        
        // MARK: - App
        struct App: Codable {
            let version, id, platform: String
        }
        
        // MARK: - Device
        struct Device: Codable {
            let id, model: String
        }
        
        // MARK: - Input
        struct Input: Codable {
            let annotations: Annotations
            let intent: String
        }
        
        // MARK: - Annotations
        struct Annotations: Codable {
            let topic: String
        }
        
        // MARK: - Location
        struct Location: Codable {
            let latitude: Double
            let timezone: String
            let longitude: Double
        }
        
        // MARK: - User
        struct User: Codable {
            let carNumber: String
            let accessTokens: [AccessToken]
            let uuid, name, phoneNumber, restaurantNumber: String
            let id: String
            
            enum CodingKeys: String, CodingKey {
                case carNumber = "car_number"
                case accessTokens = "access_tokens"
                case uuid, name
                case phoneNumber = "phone_number"
                case restaurantNumber = "restaurant_number"
                case id
            }
        }
        
        // MARK: - AccessToken
        struct AccessToken: Codable {
            let provider, value: String
            let email: String?
        }

    }
    
    // MARK: Object model for API responses
    
    struct Response
    {
        // MARK: - NewsResponse
        struct NewsResponse: Codable {
            let responses: [Response]
            enum CodingKeys: String, CodingKey {
                case responses
            }
        }
        
        // MARK: - Response
        struct Response: Codable {
            let cards: [Card]
            enum CodingKeys: String, CodingKey {
                case cards
            }
        }
        
        // MARK: - Card
        struct Card: Codable {
            let articleURL: String?
            let cardToken, cardDescription: String
            let imageURL: String?
            let name: String
            let publishedAt: String
            let source: String
            let type: TypeEnum
            
            enum CodingKeys: String, CodingKey {
                case articleURL = "article_url"
                case cardToken = "card_token"
                case cardDescription = "description"
                case imageURL = "image_url"
                case name
                case publishedAt = "published_at"
                case source, type
            }
        }
        
        enum TypeEnum: String, Codable {
            case newsItem = "news_item"
        }
    }
    
    // MARK: Object model for UI rendering
    
    struct ViewModel
    {
        var dataSource = [NewsList.Response.Card]()
    }
}
